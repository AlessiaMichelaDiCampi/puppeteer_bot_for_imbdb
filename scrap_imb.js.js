const puppeteer = require('puppeteer');
var fs = require('fs');

(async () => {
  var array = [114709,
    113497,
    113228,
    114885,
    113041,
    113277,
    114319,
    112302,
    114576,
    113189,
    112346,
    112896,
    112453,
    113987,
    112760,
    112641,
    114388,
    113101,
    112281,
    113845,
    113161,
    112722,
    112401,
    114168,
    113627,
    114057,
    114011,
    114117,
    112682,
    115012,
    112792,
    114746,
    112431,
    112818,
    113442,
    112697,
    112749,
    114279,
    112819,
    114272,
    113855,
    114681,
    113347,
    114369,
    114148,
    114916,
    114814,
    113819,
    110299,
    112499,
    113158,
    113321,
    110877,
    113419,
    116260,
    113862,
    116126,
    118002,
    115683,
    116839,
    113149,
    113118,
    116367,
    113010,
    113537,
    113828,
    115644,
    115676,
    114367,
    113973,
    112744,
    116731,
    112445,
    114660,
    112379,
    114039,
    112365,
    118158,
    116151,
    115697,
    113972,
    117002,
    114825,
    115639,
    115759,
    113403,
    113247,
    113283,
    115907,
    115734,
    117102,
    118040,
    116483,
    112579,
    110251,
    117110,
    112646,
    112573,
    75314,
    113326,
    115645,
    112373,
    115033,
    116606,
    114536,
    106473,
    103859,
    109424,
    116324,
    110647,
    110217,
    114131,
    113451,
    116130,
    113756,
    118055,
    115685,
    112585,
    112442,
    112342,
    112461,
    112427,
    109093,
    112384,
    114287,
    112288,
    112462,
    61395,
    112495,
    112541,
    109370,
    112642,
    112688,
    112715,
    112740,
    109508,
    112851,
    112857,
    112864,
    112887,
    113071,
    113114,
    113243,
    113464,
    113481,
    113492,
    113500,
    113540,
    113677,
    113690,
    107447,
    113729,
    113749,
    113820,
    110604,
    110620,
    113957,
    113986,
    114095,
    114194,
    114241,
    114323,
    114345,
    114436,
    114478,
    114496,
    114508,
    114558,
    58450,
    114663,
    114702,
    114682,
    114781,
    114798,
    114805,
    114887,
    114898,
    114928,
    114938,
    109340,
    112602,
    111579,
    110882,
    112471,
    112508,
    112438,
    112571,
    112757,
    112643,
    112679,
    109445,
    112883,
    109635,
    109676,
    112854,
    109579,
    109642,
    109686,
    111797,
    109759,
    109758,
    109707,
    113117,
    113097,
    113028,
    113198,
    113303,
    113089,
    109771,
    113199,
    110057,
    110005,
    110066,
    110116,
    110006,
    113360,
    110099,
    110148,
    113463,
    110189,
    110216,
    113501,
    113538,
    113552,
    76759,
    110367,
    113670,
    110296,
    103994,
    110322,
    110443,
    107566,
    110391,
    113691,
    110428,
    109836,
    113755,
    110538,
    110516,
    110527,
    113808,
    113896,
    113870,
    110684,
    110638,
    113967,
    117169,
    106402,
    110671,
    110632,
    110737,
    110729,
    114151,
    114069,
    110413,
    114113,
    114210,
    110912,
    105652,
    110889,
    110932,
    114129,
    110963,
    114214,
    114296,
    110907,
    111495,
    108394,
    111507,
    114268,
    110965,
    114571,
    111333,
    111112,
    111255,
    111282,
    111070,
    111161,
    111149,
    108260,
    106966,
    114594,
    111309,
    113936,
    110081,
    114614,
    114608,
    111280,
    114609,
    111454,
    114852,
    114694,
    111590,
    114788,
    114888,
    108550,
    114857,
    114924,
    111667,
    109655,
    110598,
    112435,
    109040,
    109045,
    106339,
    104779,
    109348,
    109444,
    109446,
    109484,
    109504,
    109506,
    109450,
    109813,
    109830,
    109831,
    113305,
    110091,
    110093,
    110167,
    110213,
    107472,
    110357,
    107426,
    111686,
    110475,
    110478,
    110588,
    110622,
    110771,
    110950,
    105226,
    110989,
    110997,
    111257,
    111256,
    111438,
    111503,
    111693,
    111742,
    111756,
    112443,
    110455,
    111048,
    110399,
    112570,
    109454,
    59170,
    110186,
    111301,
    110027,
    109785,
    113409,
    109021,
    109035,
    106220,
    106226,
    109068,
    109067,
    106292,
    109198,
    109219,
    106379,
    106400,
    109254,
    109279,
    109297,
    109303,
    109305,
    109306,
    106452,
    106471,
    106489,
    109361,
    106505,
    106519,
    109439,
    109443,
    106582,
    106598,
    109456,
    109480,
    109493,
    106673,
    106677,
    106697,
    106834,
    106873,
    106332,
    106881,
    106880,
    111732,
    106926,
    111712,
    106941,
    106918,
    106965,
    109842,
    106977,
    107004,
    109890,
    109891,
    109913,
    107076,
    107144,
    113674,
    112966,
    107151,
    110064,
    110074,
    110097,
    110123,
    107206,
    107207,
    110137,
    108551,
    110197,
    107286,
    107290,
    107302,
    110265,
    110305,
    107362,
    107413,
    110353,
    107468,
    107478,
    107497,
    107501,
    107507,
    107554,
    116253,
    74102,
    111689,
    107616,
    107613,
    107614];

    const browser = await puppeteer.launch({
        headless: true
    });
  const page = await browser.newPage();
  var arr_tot = [];

    for (let index = 0; index < array.length; index++) {

    await page.goto('https://www.imdb.com/title/tt0'+array[index]+'/');
    console.log('https://www.imdb.com/title/tt0'+array[index]+'/')
    const data = await page.evaluate(()=>{
      var lista = new Object();
      var description = (document.getElementsByClassName('summary_text')[0]).innerText;
      lista['description'] = description;
      var director = (document.getElementsByClassName('credit_summary_item')[0].outerText);
      director.split(' ');
      director = director.split(' ');
      lista['director'] = director[1]+' '+director[2];
      var metascore = (document.getElementsByClassName('metacriticScore')[0]);
      if(metascore!=undefined){
        metascore = metascore.innerText;
      }else metascore = "";
      lista['metascore'] = metascore;
      var reviews = (document.getElementsByClassName('subText')[1]);
      if(reviews!=undefined){
        reviews = reviews.outerText;
      }else reviews = "";
      reviews.split(' ');
      reviews = reviews.split(' ');
      lista['reviews'] = reviews[0];
      lista['critic'] = reviews[3];
      var popularity = (document.getElementsByClassName('subText')[2]);
      if(popularity!=undefined){
        popularity = popularity.outerText;
      }else popularity = "";
      popularity = popularity.split(' ');
      popularity = popularity[0];
      var number_pop = popularity[2];
      lista['popularity'] = popularity;

      var level_popularity = (document.getElementsByClassName('subText')[2]);

      if(level_popularity!=undefined){
        level_popularity = (document.getElementsByClassName('subText')[2].children[1].className == 'popularityDown' ? "Down" : "Up");
      }else level_popularity = "";


      lista['level_popularity'] = level_popularity;
      lista['number_popularity'] = number_pop;//
      var cast = Array.from(document.querySelectorAll('tbody tr td'));
      cast = cast.splice(2, cast.length);
      lista['cast'] = cast.map(td => td.innerText);
      const valuesToRemove = ['', '...']
      lista['cast'] = lista['cast'].filter(item => !valuesToRemove.includes(item))
      arr_tot = lista;
      return arr_tot;
  });
  console.log(data);
  fs.appendFileSync('scrap.txt', JSON.stringify(data));
}




await browser.close();
})();

